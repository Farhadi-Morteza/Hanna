@page  "/ProductIndicators/Index"
@inject ProductIndicatorService productIndicatorService

@inject NavigationManager navigationManager
@inject IDialogService dialogService
@inject ISnackbar snackbar

<PageTitle>@(Resources.DataDictionary.ProductIndicatorList)</PageTitle>


<MrsGrid Justify="Justify.Center">

    <MudItem xs ="8">
        <MudPaper>        
            <MudGrid>
                <MudItem>
                     <MrsButtonCreate ButtonType="ButtonType.Button" OnClick="@(() => Create())" />    
                </MudItem>
            </MudGrid>                 
        </MudPaper>
    </MudItem>

    <MudBreakpointProvider />

    <MudItem xs="8" Style="text-align:center">
        <MrsSpinLoader IsLoading="@(Index == null)">

            <MrsTable Items="@Index"
                      Title="@(Resources.DataDictionary.ProductIndicatorList)"
                      Dense="true">

                <HeaderContent>
                    <MrsTh>@(Resources.DataDictionary.Name)</MrsTh>
                    <MrsTh>@(Resources.DataDictionary.UnitConversion)</MrsTh>
                    <MrsTh>@(Resources.DataDictionary.IsActive)</MrsTh>
                    <MrsTh>@(Resources.DataDictionary.Metric)</MrsTh>
                    <MrsTh></MrsTh>
                </HeaderContent>

                <RowTemplate>
                    <MudTd DataLabel="@(Resources.DataDictionary.Name)">@context.Name</MudTd>
                    <MudTd DataLabel="@(Resources.DataDictionary.UnitConversion)">@context.UnitConversion</MudTd>
                    <MudTd DataLabel=@(Resources.DataDictionary.IsActive)>
                        <MrsCheckBox @bind-Checked="@context.IsActive" Disabled="true"></MrsCheckBox>
                    </MudTd>
                    <MudTd DataLabel="@(Resources.DataDictionary.Name)">@context.Metric.Name</MudTd>
                    <MudTd Style="text-align:end">
                        <MudIconButton OnClick="() => Delete(context)" Icon="@Icons.Material.Filled.Delete" Size="Size.Small" Class="m-2" Color="Color.Error"></MudIconButton>
                        <MudIconButton OnClick="() => Edit(context)" Icon="@Icons.Material.Filled.Edit" Size="Size.Small" Class="m-2" Color="Color.Info" />
                    </MudTd>
                </RowTemplate>

            </MrsTable>
        </MrsSpinLoader>
     
    </MudItem>
</MrsGrid>



@code {
    #region Constructor ================================================================================================

    protected async override Task OnInitializedAsync()
    {
        Index = 
            await productIndicatorService.GetAsync();

    }

    #endregion =========================================================================================================

    #region Properties =================================================================================================

    public IList<ViewModels.ProductIndicatorViewModel> Index { get; set; }

    #endregion =========================================================================================================

    #region Method =====================================================================================================

    public void Create()
    {
        navigationManager.NavigateTo(uri: Resources.LinkCaptions.ProductIndicator_Create, forceLoad: false);
    }

    private void Edit(ViewModels.ProductIndicatorViewModel editEntity)
    {
        navigationManager.NavigateTo(uri: $"{Resources.LinkCaptions.ProductIndicator_Edit}/{editEntity.Id}", forceLoad: false);
    }

    private async Task Delete(ViewModels.ProductIndicatorViewModel deleteEntity)
    {
        var dialog = dialogService.Show<MrsDialogDelete>();
        var result = await dialog.Result;

        if (result.Cancelled == false)
        {
            bool Isdeleted = await productIndicatorService.DeleteAsync(deleteEntity.Id.ToString());

            if (Isdeleted)
            {
                Index.Remove(deleteEntity);               
                snackbar.Add($"{Resources.InformationMessages.DeleteSuccess}", Severity.Success, config => { config.Icon = Icons.Filled.Delete; });                
            }
            else
            {
                snackbar.Add($"{Resources.InformationMessages.DeleteFail}", Severity.Warning, config => { config.Icon = Icons.Filled.Warning; });
            }
        }
    }

    #endregion =========================================================================================================

}
